import upsetplot as upset
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


def get_gene_columns(df):
    """
    Dividing genomes in groups of 4(columns)
    :param df: dataFrame generated by given CSV file
    :return: A 2-d list, each element representing a set of 4 genes
    """
    gen_cols = []
    cur = []
    for idx, col in enumerate(list(df)):
        cur.append(col)
        # print(cur)
        if (idx + 1) % 4 == 0:
            gen_cols.append(cur)
            cur = []
    if len(cur) != 0:
        gen_cols.append(cur)
    return gen_cols


if __name__ == '__main__':
    df = pd.read_csv('./gene_presence_absence.csv')

    col_lst = [col for col in list(df) if ".fna" in str(col)]
    # col_lst.insert(0, list(df)[0])
    data = df.fillna(value=0)
    data.replace('^[a-zA-Z0-9_\t]{13,}$', 1, inplace=True, regex=True)
    data.sort_values(by='Gene', inplace=True, key=lambda col: col.str.lower())
    data.to_csv('output.csv', columns=col_lst, index=False)

    # load CSV file
    df = pd.read_csv("./output.csv")
    # drop column 'Gene'
    # df = df.drop('Gene', axis=1)

    gene_cols = get_gene_columns(df)
    col_num = 0

    for col in gene_cols:
        df = pd.read_csv("./output.csv", usecols=col)
        df = df.astype(bool)

        # for testing
        # print(type(df))
        # print(df.shape)
        # print(df)

        # fig = plt.figure(figsize=(12, 6))
        upset.plot(upset.from_indicators(df), min_subset_size=100, show_percentages=True, show_counts='%d', subset_size='count', sort_by='cardinality')

        figName = f"Fig_{col_num}.png"
        plt.savefig(figName)
        col_num += 1

        # plt.show()
